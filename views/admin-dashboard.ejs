<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Admin Dashboard</title>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet" />
  <style>
    .header-bg {
      background: linear-gradient(135deg, #264653, #2a9d8f);
      color: white;
      padding: 1.5rem 1rem;
    }
    .card {
      background: white;
      border-radius: 0.5rem;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      transition: transform 0.2s;
    }
    .card:hover {
      transform: translateY(-5px);
    }
    .button-primary {
      background: #2a9d8f;
      color: white;
      padding: 0.75rem 1.25rem;
      border-radius: 0.25rem;
      font-weight: bold;
      text-transform: uppercase;
    }
    .button-primary:hover {
      background: #1d7769;
    }
    .main-section {
      background: #f4f4f9;
      padding: 1.5rem;
      border-radius: 0.5rem;
      margin-bottom: 2rem;
    }
    .sport-card {
      width: 280px;
      height: 280px;
      transition: transform 0.2s;
    }
    .sport-card:hover {
      transform: scale(1.05);
    }
    .header-bg {
      background: linear-gradient(135deg, #2a9d8f, #264653); 
      padding: 1.5rem; 
    }
    .main-section {
      background: #f1faee; 
      border-radius: 0.5rem;
      padding: 1.5rem;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }
    .button-primary {
      background: #e63946; 
      color: white; 
      padding: 0.75rem 1.25rem; 
      border-radius: 0.25rem; 
      text-transform: uppercase;
      font-weight: bold;
    }
    .button-primary:hover {
      background: #d62828; 
    }
  </style>
</head>
<body class="bg-gray-100">
  <header class="header-bg text-white">
    <div class="container mx-auto flex justify-between items-center">
      <h1 class="text-4xl font-bold">Admin Dashboard</h1>
      <nav class="flex space-x-6">
        <a href="reports" class="text-lg font-medium hover:underline">Reports</a>
        <a href="#" class="text-lg font-medium hover:underline">Manage Sports</a>
        <a href="#" class="text-lg font-medium hover:underline">Manage Sessions</a>
        <a href="/logout" class="text-lg font-medium hover:underline">Logout</a>
      </nav>
    </div>
  </header>

  <main class="container mx-auto mt-12">
    <section class="main-section mb-10">
      <header class="mb-6">
        <h2 class="text-3xl font-bold text-gray-700">Sports Management</h2>
      </header>
      <div class="mb-6 flex items-center justify-between">
        <button id="toggleCreateSportForm" class="button-primary" onclick="toggleCreateSportForm()">Create Sport</button>
        <button id="cancelCreateSport" class="button-primary hidden" onclick="toggleCreateSportForm()">Cancel</button>
      </div>
      <form action="/create-sport" method="POST" id="createSportForm" class="hidden">
        <div class="mb-4">
          <input type="text" name="name" id="sport_name" class="w-full px-4 py-2 border rounded focus:outline-none focus:ring focus:ring-indigo-300" placeholder="Enter sport name" required />
        </div>
        <button type="submit" class="button-primary">Add Sport</button>
      </form>
      <div id="sportsList" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        <% sports.forEach(sport => { %>
          <div class="sport-card p-6 shadow-lg bg-white rounded relative" data-sport-id="<%= sport.id %>">
            <div class="flex justify-between items-center mb-4">
              <h3 class="text-xl font-semibold text-gray-800"><%= sport.name %></h3>
              <button onclick="deleteSport('<%= sport.id %>')" class="text-red-500 hover:text-red-700">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                </svg>
              </button>
            </div>
            <button onclick="toggleCreateSessionForm('<%= sport.id %>', '<%= sport.name %>')" class="button-primary w-full">Create Session</button>
          </div>
        <% }) %>
      </div>
    </section>

    <section id="createSessionSection" class="main-section mb-10">
      <header class="mb-6">
        <h2 id="createSessionHeader" class="text-3xl font-bold text-gray-700">Create Session</h2>
      </header>
      <div>
        <% sports.forEach(sport => { %>
          <div id="createSessionForm<%= sport.id %>" class="hidden">
            <form action="/create-session" method="POST">
              <input type="hidden" name="sport_id" value="<%= sport.id %>">
              <div class="grid gap-6">
                <div>
                  <label for="team1_<%= sport.id %>" class="block text-gray-700">Team 1:</label>
                  <input type="text" name="team1" id="team1_<%= sport.id %>" class="w-full px-4 py-2 border rounded focus:outline-none focus:ring" required />
                </div>
                <div>
                  <label for="team2_<%= sport.id %>" class="block text-gray-700">Team 2:</label>
                  <input type="text" name="team2" id="team2_<%= sport.id %>" class="w-full px-4 py-2 border rounded focus:outline-none focus:ring" required />
                </div>
                <div>
                  <label for="date_<%= sport.id %>" class="block text-gray-700">Date:</label>
                  <input type="date" name="date" id="date_<%= sport.id %>" class="w-full px-4 py-2 border rounded focus:outline-none focus:ring" required />
                </div>
                <div>
                  <label for="venue_<%= sport.id %>" class="block text-gray-700">Venue:</label>
                  <input type="text" name="venue" id="venue_<%= sport.id %>" class="w-full px-4 py-2 border rounded focus:outline-none focus:ring" required />
                </div>
              </div>
              <div class="mt-6 flex justify-end space-x-4">
                <button type="button" onclick="toggleCreateSessionForm('<%= sport.id %>', '<%= sport.name %>')" class="button-primary">Cancel</button>
                <button type="submit" class="button-primary">Create Session</button>
              </div>
            </form>
          </div>
        <% }) %>
      </div>
    </section>

    <section id="allSessions" class="main-section">
      <header class="mb-6">
        <h2 class="text-3xl font-bold text-gray-700">All Sessions</h2>
      </header>
      <ul class="divide-y">
        <% sessions.forEach(session => { %>
          <li class="py-6">
            <div class="flex justify-between items-center">
              <div>
                <h3 class="font-bold text-lg text-gray-800"><%= session.sport_name %></h3>
                <p class="text-gray-600">Teams: <%= session.team1 %> vs <%= session.team2 %></p>
                <p class="text-gray-600">Date: <%= session.date %></p>
                <p class="text-gray-600">Venue: <%= session.venue %></p>
                <p class="text-gray-600">Created by: <%= session.creator_name %></p>
              </div>
              <div>
                <% if (user.role === 'admin') { %>
                  <button onclick="toggleEditForm('<%= session.id %>')" class="button-primary">Edit</button>
                  <button onclick="deleteSession('<%= session.id %>')" class="button-primary">Delete</button>
                <% } %>
              </div>
            </div>
            <form id="edit-form-<%= session.id %>" class="hidden mt-6" action="/edit-session" method="POST">
              <input type="hidden" name="session_id" value="<%= session.id %>">
              <input type="text" name="team1" value="<%= session.team1 %>" class="w-full px-4 py-2 border rounded focus:outline-none focus:ring" required />
              <input type="text" name="team2" value="<%= session.team2 %>" class="w-full px-4 py-2 border rounded focus:outline-none focus:ring" required />
              <input type="date" name="date" value="<%= session.date %>" class="w-full px-4 py-2 border rounded focus:outline-none focus:ring" required />
              <input type="text" name="venue" value="<%= session.venue %>" class="w-full px-4 py-2 border rounded focus:outline-none focus:ring" required />
              <div class="mt-6 flex justify-end space-x-4">
                <button type="button" onclick="toggleEditForm('<%= session.id %>')" class="button-primary">Cancel</button>
                <button type="submit" class="button-primary">Save Changes</button>
              </div>
            </form>
          </li>
        <% }) %>
      </ul>
    </section>
  </main>

  <script>
    function toggleCreateSessionForm(sportId, sportName) {
      document.querySelectorAll('.createSessionForm').forEach(form => {
        if (form.id !== `createSessionForm${sportId}`) {
          form.classList.add('hidden');
        }
      });
    
      const form = document.getElementById(`createSessionForm${sportId}`);
      form.classList.toggle('hidden');
    
      const sessionHeader = document.getElementById('createSessionHeader');
      sessionHeader.textContent = `Create Session for ${sportName}`;
    }
    
    function toggleEditForm(sessionId) {
        const editForm = document.getElementById(`edit-form-${sessionId}`);
        if (editForm.classList.contains('hidden')) {
          editForm.classList.remove('hidden');
        } else {
          editForm.classList.add('hidden');
        }
      }
    function submitEditSessionForm(sessionId) {
      const form = document.getElementById(`edit-form-${sessionId}`);
      const formData = new FormData(form);
    
      fetch(`/edit-session/${sessionId}`, {
        method: 'POST',
        body: new URLSearchParams(formData)
      })
      .then(response => {
        if (!response.ok) {
          throw new Error('Failed to update session');
        }
        return response.json();
      })
      .then(data => {
        console.log('Session updated successfully:', data);
        toggleEditForm(sessionId);
        window.location.reload(); 
      })
      .catch(error => {
        console.error('Error updating session:', error);
      });
    }
    
    function deleteSport(sportId) {
      if (confirm("Are you sure you want to delete this sport?")) {
        fetch(`/delete-sport/${sportId}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          }
        })
        .then(response => {
          if (!response.ok) {
            throw new Error('Failed to delete sport');
          }
          window.location.reload();
        })
        .catch(error => {
          console.error('Error deleting sport:', error);
        });
      }
    }
    
    function deleteSession(sessionId) {
      if (confirm("Are you sure you want to delete this session?")) {
        fetch(`/delete-session/${sessionId}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          }
        })
        .then(response => {
          if (!response.ok) {
            throw new Error('Failed to delete session');
          }
          window.location.reload();
        })
        .catch(error => {
          console.error('Error deleting session:', error);
        });
      }
    }
    
    function toggleCreateSportForm() {
      const createSportForm = document.getElementById('createSportForm');
      const toggleCreateSportBtn = document.getElementById('toggleCreateSportForm');
      const cancelCreateSportBtn = document.getElementById('cancelCreateSport');
    
      createSportForm.classList.toggle('hidden');
      toggleCreateSportBtn.classList.toggle('hidden');
      cancelCreateSportBtn.classList.toggle('hidden');
    }
    
      </script>
</body>
</html>

